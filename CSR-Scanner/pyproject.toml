[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "csr-scanner"
version = "1.0.0"
description = "A powerful tool for detecting client-side vs server-side rendering on websites"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Isreal Oyarinde", email = "contact@isrealoyarinde.com"},
]
keywords = ["web-scraping", "rendering-detection", "selenium", "javascript", "automation"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
    "Topic :: Software Development :: Testing",
    "Topic :: System :: Monitoring",
]
dependencies = [
    "requests>=2.28.1",
    "selenium>=4.7.2",
    "pandas>=1.5.2",
    "webdriver-manager>=3.8.5",
    "tqdm>=4.64.1",
    "openpyxl>=3.0.10",
    "fake-useragent>=1.1.3",
    "undetected-chromedriver>=3.4.6",
    "beautifulsoup4>=4.11.1",
    "python-dotenv>=0.21.0.2",
    "psutil>=5.9.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=0.5",
]

[project.scripts]
csr-scanner = "run_analysis:main"

[project.urls]
Homepage = "https://github.com/Primus-Izzy/CSR-Scanner"
Documentation = "https://github.com/Primus-Izzy/CSR-Scanner/docs"
Repository = "https://github.com/Primus-Izzy/CSR-Scanner"
"Bug Tracker" = "https://github.com/Primus-Izzy/CSR-Scanner/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]